name: Build and Push to Dockerhub

on:
  push:
    tags:
      - 'v*.*.*'
    paths-ignore:
      # - '**.yml'
      - '**.md'
      - 'Makefile'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Extract Version
        id: version_step
        run: |
          echo "##[set-output name=version;]VERSION=${GITHUB_REF#$"refs/tags/v"}"
          echo "##[set-output name=version_tag;]$GITHUB_REPOSITORY:${GITHUB_REF#$"refs/tags/v"}"
          echo "##[set-output name=latest_tag;]$GITHUB_REPOSITORY:latest"
      
      - name: Print Version
        run: |
          echo ${{ steps.version_step.outputs.version_tag }}
          echo ${{ steps.version_step.outputs.latest_tag }}

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Prepare Tag Names
      #   run: |
      #     echo LASTEST_TAG=$(echo ${{ steps.version_step.outputs.latest_tag  }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
      #     echo MAJOR_VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | sed -e 's/v//' -e 's/\..*//') >> $GITHUB_ENV
      #     echo MINOR_VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | sed -e 's/v//' -e 's/[0-9][0-9]*.//' -e 's/\.[0-9][0-9]*//') >> $GITHUB_ENV
      #     echo PATCH_VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | sed -e 's/v//' -e 's/[0-9][0-9]*\.//g') >> $GITHUB_ENV
      
      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     tags: |
      #       ${{ env.LASTEST_TAG }}
      #       ${{ env.MAJOR_VERSION_TAG }}
      #       ${{ env.MINOR_VERSION_TAG }}
      #       ${{ env.PATCH_VERSION_TAG }}
      #     build-args: |
      #       ${{ steps.version_step.outputs.version }}