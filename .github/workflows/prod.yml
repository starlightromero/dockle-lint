name: Build and Push to Dockerhub

on:
  push:
    tags:
      - 'v**.**.**'
    paths-ignore:
      - '.gitignore'
      - '**.yml'
      - '**.md'
      - 'Makefile'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Scan Dockerfile with Hadolint
        run: |
          # Install Hadolint
          curl -sL https://github.com/hadolint/hadolint/releases/download/v2.6.0/hadolint-Linux-x86_64 -o /tmp/hadolint
          chmod +x /tmp/hadolint
          sudo mv /tmp/hadolint /usr/local/bin/
          
          # Scan Dockerfile
          hadolint --no-fail Dockerfile

      - name: Extract Version
        id: version_step
        run: |
          echo "##[set-output name=version_tag;]$GITHUB_REPOSITORY:${GITHUB_REF#$"refs/tags/v"}"
          echo "##[set-output name=latest_tag;]$GITHUB_REPOSITORY:latest"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prepare Tag Names
        run: |
          echo LASTEST_TAG=$(echo ${{ steps.version_step.outputs.latest_tag  }}) >> $GITHUB_ENV
          echo MAJOR_VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | sed -e 's/v//' -e 's/\..*//') >> $GITHUB_ENV
          echo MINOR_VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | sed -e 's/v//' -e 's/\.[0-9]*[0-9]*$//') >> $GITHUB_ENV
          echo PATCH_VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | sed -e 's/v//') >> $GITHUB_ENV

      - name: Build Images
        run: |
          echo ${{ secrets.PASSWD }} > /tmp/passwd
          DOCKER_BUILDKIT=1 docker build -t ${{ env.LASTEST_TAG }} -t ${{ env.MAJOR_VERSION_TAG }} -t ${{ env.MINOR_VERSION_TAG }} -t ${{ env.PATCH_VERSION_TAG }} --secret id=passwd,src=/tmp/passwd .
          rm /tmp/passwd

      - name: Scan Image with Dockle
        run: |
          # Install Dockle
          curl -sL https://github.com/goodwithtech/dockle/releases/download/v0.3.15/dockle_0.3.15_Linux-64bit.tar.gz -o /tmp/dockle.tar.gz
          tar zxf /tmp/dockle.tar.gz -C /tmp
          sudo mv /tmp/dockle /usr/local/bin/
        
          # Scan image with Dockle
          dockle --exit-code 1 --exit-level info -i CIS-DI-0005 ${{ env.MAJOR_VERSION_TAG }}

      - name: Scan Image with Snyk
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ env.MAJOR_VERSION_TAG }}
          args: --file=Dockerfile

      - name: Push Image
        run: |
          docker image push ${{ env.LASTEST_TAG }}
          docker image push ${{ env.MAJOR_VERSION_TAG }}
          docker image push ${{ env.MINOR_VERSION_TAG }}
          docker image push ${{ env.PATCH_VERSION_TAG }}
          